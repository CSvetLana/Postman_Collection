{
	"info": {		
		"name": "DELETE Company City API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"		
	},
	"item": [
		{
			"name": "Preconditions",
			"item": [
				{
					"name": "Create City",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set('createdTestCity', jsonData.data.key);\r",
									"    pm.expect(jsonData.statusCode).to.eql(201);\r",
									"    pm.expect(jsonData.data).to.have.property('key').eql(\"TESTCITY\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"key\": \"TESTCITY\",\"localizationFields\": [{\"language\": \"EN\",\"name\": \"TestCity\"},{\"language\": \"RU\",\"name\": \"ТестСити\"}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/company-city-cms"
					},
					"response": []
				},
				{
					"name": "Create City for deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set('createdCityForDeletion', jsonData.data.key);\r",
									"    pm.expect(jsonData.statusCode).to.eql(201);\r",
									"    pm.expect(jsonData.data).to.have.property('key').eql(\"TESTCITYFORDELETION\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"key\": \"TESTCITYFORDELETION\",\"localizationFields\": [{\"language\": \"EN\",\"name\": \"CityForDeletion\"},{\"language\": \"RU\",\"name\": \"ТестовыйГородДляУдаления\"}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/company-city-cms"
					},
					"response": []
				},
				{
					"name": "Delete City for deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.statusCode).to.eql(200);\r",
									"    pm.expect(jsonData.data).to.have.property('raw').eql([]);\r",
									"    pm.expect(jsonData.data).to.have.property('affected').eql(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseURL}}/api/v1/company-city-cms/{{createdCityForDeletion}}"
					},
					"response": []
				},
				{
					"name": "Create City associated with One Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set('createdTestCityOne', jsonData.data.key);\r",
									"    pm.expect(jsonData.statusCode).to.eql(201);\r",
									"    pm.expect(jsonData.data).to.have.property('key').eql(\"TESTCITYONE\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"key\": \"TESTCITYONE\",\"localizationFields\": [{\"language\": \"EN\",\"name\": \"TestCityOne\"},{\"language\": \"RU\",\"name\": \"ПервыйТестовыйГород\"}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/company-city-cms"
					},
					"response": []
				},
				{
					"name": "Create City associated with Two Companies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set('createdTestCityTwo', jsonData.data.key);\r",
									"    pm.expect(jsonData.statusCode).to.eql(201);\r",
									"    pm.expect(jsonData.data).to.have.property('key').eql(\"TESTCITYTWO\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"key\": \"TESTCITYTWO\",\"localizationFields\": [{\"language\": \"EN\",\"name\": \"TestCityTwo\"},{\"language\": \"RU\",\"name\": \"ВторойТестовыйГород\"}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/company-city-cms"
					},
					"response": []
				},
				{
					"name": "Create Category for Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has companyCategoryKey property\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set('createdCategoryKey', jsonData.data.key);\r",
									"    pm.expect(jsonData.data).to.have.property('key').eql(\"TESTCATEGORY\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"key\": \"TESTCATEGORY\", \"localizationFields\": [{\"language\": \"EN\", \"name\": \"Test category\"}, {\"language\": \"RU\", \"name\": \"Тест категория\"}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/company-category-cms"
					},
					"response": []
				},
				{
					"name": "Create Company One",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set('createdCompanyOneId', jsonData.data.id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"available\": true, \"paymentWithCash\": true, \"paymentWithCard\": false, \"address\": \"Test address\", \"cities\": [\"{{createdTestCityOne}}\"], \"categories\": [\"{{createdCategoryKey}}\"],\"speakLanguages\": [\"EN\"], \"localizationFields\": [{\"language\": \"EN\", \"name\": \"Test company\", \"description\": \"Test company\"}, {\"language\": \"RU\", \"name\": \"Тестовая компания\", \"description\": \"Tестовая компания\"}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/company-cms"
					},
					"response": []
				},
				{
					"name": "Create Company Two",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set('createdCompanyTwoId', jsonData.data.id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"available\": true, \"paymentWithCash\": true, \"paymentWithCard\": false, \"address\": \"Test address\", \"cities\": [\"{{createdTestCityTwo}}\"], \"categories\": [\"{{createdCategoryKey}}\"],\"speakLanguages\": [\"EN\"], \"localizationFields\": [{\"language\": \"EN\", \"name\": \"Test company two\", \"description\": \"Test company two\"}, {\"language\": \"RU\", \"name\": \"Вторая тестовая компания\", \"description\": \"Вторая тестовая компания\"}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/company-cms"
					},
					"response": []
				},
				{
					"name": "Create Company Three",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set('createdCompanyThreeId', jsonData.data.id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"available\": true, \"paymentWithCash\": true, \"paymentWithCard\": false, \"address\": \"Test address\", \"cities\": [\"{{createdTestCityTwo}}\"], \"categories\": [\"{{createdCategoryKey}}\"],\"speakLanguages\": [\"EN\"], \"localizationFields\": [{\"language\": \"EN\", \"name\": \"Test company three\", \"description\": \"Test company three\"}, {\"language\": \"RU\", \"name\": \"Третья тестовая компания\", \"description\": \"Третья тестовая компания\"}]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/company-cms"
					},
					"response": []
				}
			]
		},
		{
			"name": "Tests",
			"item": [
				{
					"name": "DELETE CompanyCity by key - CMPCT43",
					"item": [
						{
							"name": "DELETE CompanyCity by key - CMPCT43",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body matches expected structure\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    \r",
											"    pm.expect(jsonData.statusCode).to.eql(200);\r",
											"    pm.expect(jsonData.data).to.have.property('raw').eql([]);\r",
											"    pm.expect(jsonData.data).to.have.property('affected').eql(1);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "{{baseURL}}/api/v1/company-city-cms/{{createdTestCity}}"
							},
							"response": []
						},
						{
							"name": "Get list of Cities and verify that the deleted city isn't present in the list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body matches expected structure\", function () {\r",
											"    var cityKey = pm.environment.get('createdTestCity');\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data[0]).to.have.property('key');\r",
											"    pm.expect(jsonData.data.some(data => data.key === cityKey)).eql(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.add({\r",
											"    key: 'language',\r",
											"    value: 'EN'\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{baseURL}}/api/v1/company-city"
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE CompanyCity by invalid key - CMPCT44",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var invalidCityKey = pm.environment.get('invalidCityKey')\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.statusCode).to.eql(404);\r",
									"    pm.expect(jsonData.message).to.eql(`Company city with key: ${invalidCityKey} was not found`);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseURL}}/api/v1/company-city-cms/{{invalidCityKey}}"
					},
					"response": []
				},
				{
					"name": "DELETE CompanyCity by key, previously deleted - CMPCT45",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var TestCityKey = pm.environment.get('createdCityForDeletion')\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.statusCode).to.eql(404);\r",
									"    pm.expect(jsonData.message).to.eql(`Company city with key: ${TestCityKey} was not found`);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseURL}}/api/v1/company-city-cms/{{createdCityForDeletion}}"
					},
					"response": []
				},
				{
					"name": "DELETE CompanyCity associated with an existing company by ID - CMPCT46",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var testCompanyId = pm.environment.get(\"createdCompanyOneId\");\r",
									"    var testCityKey = pm.environment.get('createdTestCityOne')\r",
									"    pm.expect(jsonData.statusCode).to.eql(400);\r",
									"    pm.expect(jsonData.message).to.eql(`For company ${testCompanyId+\" \"+testCityKey} city is the only city.`);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseURL}}/api/v1/company-city-cms/{{createdTestCityOne}}"
					},
					"response": []
				},
				{
					"name": "DELETE CompanyCity associated with 2 existing companies by Id - CMPCT47",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var testCompanyId = pm.environment.get(\"createdCompanyTwoId\");\r",
									"    var testCityKey = pm.environment.get('createdTestCityTwo')\r",
									"    pm.expect(jsonData.statusCode).to.eql(400);\r",
									"    pm.expect(jsonData.message).to.eql(`For company ${testCompanyId+\" \"+testCityKey} city is the only city.`);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseURL}}/api/v1/company-city-cms/{{createdTestCityTwo}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "Postconditions",
			"item": [
				{
					"name": "Delete Company One",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.statusCode).to.eql(200);\r",
									"    pm.expect(jsonData.data).to.have.property('raw').eql([]);\r",
									"    pm.expect(jsonData.data).to.have.property('affected').eql(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseURL}}/api/v1/company-cms/{{createdCompanyOneId}}"
					},
					"response": []
				},
				{
					"name": "Delete Company Two",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.statusCode).to.eql(200);\r",
									"    pm.expect(jsonData.data).to.have.property('raw').eql([]);\r",
									"    pm.expect(jsonData.data).to.have.property('affected').eql(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseURL}}/api/v1/company-cms/{{createdCompanyTwoId}}"
					},
					"response": []
				},
				{
					"name": "Delete Company Three",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.statusCode).to.eql(200);\r",
									"    pm.expect(jsonData.data).to.have.property('raw').eql([]);\r",
									"    pm.expect(jsonData.data).to.have.property('affected').eql(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseURL}}/api/v1/company-cms/{{createdCompanyThreeId}}"
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.statusCode).to.eql(200);\r",
									"    pm.expect(jsonData.data).to.have.property('raw').eql([]);\r",
									"    pm.expect(jsonData.data).to.have.property('affected').eql(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseURL}}/api/v1/company-category-cms/{{createdCategoryKey}}"
					},
					"response": []
				},
				{
					"name": "Delete City associated with One Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.statusCode).to.eql(200);\r",
									"    pm.expect(jsonData.data).to.have.property('raw').eql([]);\r",
									"    pm.expect(jsonData.data).to.have.property('affected').eql(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseURL}}/api/v1/company-city-cms/{{createdTestCityOne}}"
					},
					"response": []
				},
				{
					"name": "Delete City associated with Two Companies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body matches expected structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.statusCode).to.eql(200);\r",
									"    pm.expect(jsonData.data).to.have.property('raw').eql([]);\r",
									"    pm.expect(jsonData.data).to.have.property('affected').eql(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{baseURL}}/api/v1/company-city-cms/{{createdTestCityTwo}}"
					},
					"response": []
				}
			]
		}
	]
}